<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>IMI Showtime</title>
    <link>https://htw-imi-showtime.github.io/staging/</link>
    <description>Recent content on IMI Showtime</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>de-de</language><atom:link href="https://htw-imi-showtime.github.io/staging/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Challenges</title>
      <link>https://htw-imi-showtime.github.io/staging/ss23/master/m2-mentist/challenges/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://htw-imi-showtime.github.io/staging/ss23/master/m2-mentist/challenges/</guid>
      <description>Challenges Designing an appropriate mental health concept Creating a suitable concept for a mental health chatbot application comes with its unique set of challenges, primarily due to the sensitive nature of the topic that demands utmost care and empathy. Mental health is a deeply personal and delicate issue, making it crucial to approach the design process with great sensitivity and respect for the users&amp;rsquo; emotional well-being. Therefore the planning and design process required multiple cycles of refinement and validation involving psychology expert views and much in-depth research.</description>
    </item>
    
    <item>
      <title>Features</title>
      <link>https://htw-imi-showtime.github.io/staging/ss23/bachelor/b2-i-cant-c-sharp/features/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://htw-imi-showtime.github.io/staging/ss23/bachelor/b2-i-cant-c-sharp/features/</guid>
      <description>Features Game-Modes The game is divided into two segments. A single player mode where each of our simple games can be played separately from others.
In the endless mode you can play until you run out of hearts. In this mode two randomly selected games of matching genres are displayed in parallel, on the right and left side respectively, and can be played simultaneously.
The skilled ones should start with the Parallel-Mode.</description>
    </item>
    
    <item>
      <title>Features</title>
      <link>https://htw-imi-showtime.github.io/staging/ss23/bachelor/b3-shop-gpt/features/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://htw-imi-showtime.github.io/staging/ss23/bachelor/b3-shop-gpt/features/</guid>
      <description>Features Curated shopping list A curated shopping list offers a thematic shopping experience that provides users with automatic, personalized product recommendations based on specific events or activities they choose. Whether users are preparing for a camping tour, a clubbing night out, or any other occasion, the curated shopping list caters to their unique needs.
Product comparison ShopGPT analyzes product descriptions and specifications to automatically compare similar products and highlight the most important differences and similarities, helping users make informed purchasing decisions.</description>
    </item>
    
    <item>
      <title>Features</title>
      <link>https://htw-imi-showtime.github.io/staging/ss23/bachelor/b4-visual-agenda/features/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://htw-imi-showtime.github.io/staging/ss23/bachelor/b4-visual-agenda/features/</guid>
      <description>Features Agenda Planning Our app lets you effortlessly create well-structured agendas within fixed timeframes. You can organize topics, set time limits, and ensure that meetings stay on track.
Timekeeping With our intuitive timekeeping feature, you&amp;rsquo;ll receive real-time alerts as you approach each agenda item&amp;rsquo;s time limit. This ensures to keep everyone focused and make every minute count.
Clear Visual Agenda Overview Our app provides a convenient visual representation of your entire meeting agenda, making it easy for you and your participants to stay oriented and informed about upcoming topics.</description>
    </item>
    
    <item>
      <title>Features</title>
      <link>https://htw-imi-showtime.github.io/staging/ss23/bachelor/b5-spellweaver/features/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://htw-imi-showtime.github.io/staging/ss23/bachelor/b5-spellweaver/features/</guid>
      <description>Features The following is a brief overview of the individual features of our game. They were developed with the goal to playfully try out speech-to-text input in VR and to test its performance. Despite the focus on STT, it was important to us to create a solid and meaningful gaming experience.
Core Elements three selectable Speech-to-Text API&amp;rsquo;s spell book with different spells that can be turned over wand in different designs to cast the selected spell word error rate analysis board where you can see the transcribed text and what mistakes you made WER analytics board &amp;amp; Score Board SpellBook &amp;amp; Wand .</description>
    </item>
    
    <item>
      <title>Features</title>
      <link>https://htw-imi-showtime.github.io/staging/ss23/bachelor/b6-security-audit-bot/features/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://htw-imi-showtime.github.io/staging/ss23/bachelor/b6-security-audit-bot/features/</guid>
      <description>Chatbot: A chatbot, the heart of our software, should offer the user a pleasant and intuitive solution to deal with the cyber security of his system, using natural language only. The artificial intelligence classifies the user input and reacts accordingly. It also recognizes previous results and can base new audits on them. An active scan can always be monitored by the user through logs. Results can be viewed permanently at any time.</description>
    </item>
    
    <item>
      <title>Features</title>
      <link>https://htw-imi-showtime.github.io/staging/ss23/master/m2-mentist/features/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://htw-imi-showtime.github.io/staging/ss23/master/m2-mentist/features/</guid>
      <description>Features Empathetic chatbot companion The chatbot boasts a natural language processing capability, allowing it to offer responses that feel authentic and human-like. Through this, users can engage in conversational interactions that foster a sense of comfort and ease, as if speaking with a caring friend. The chatbot&amp;rsquo;s compassionate and personal approach is a standout feature, as it tailors its responses to each user&amp;rsquo;s emotional state. By recognizing and acknowledging individual struggles, the chatbot becomes a reliable and understanding companion throughout the users&amp;rsquo; mental health journey.</description>
    </item>
    
    <item>
      <title>Features</title>
      <link>https://htw-imi-showtime.github.io/staging/ss23/master/m3-intu/features/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://htw-imi-showtime.github.io/staging/ss23/master/m3-intu/features/</guid>
      <description>Interactive Learning Content Intu incorporates interactive learning objects, providing users with the opportunity to actively engage with the content. This includes an animated, exploratory diagram that offers a guided view while also supporting full user control. In addition a practical implementation of the MVC Pattern enables students to better understand and explore relationships within the content. To ensure understanding and retention, Intu also features practical tasks for users to apply and test their newly acquired knowledge.</description>
    </item>
    
    <item>
      <title>Features</title>
      <link>https://htw-imi-showtime.github.io/staging/ss23/master/m5-quizzer-ai/features/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://htw-imi-showtime.github.io/staging/ss23/master/m5-quizzer-ai/features/</guid>
      <description>‚ùì Generate Quizzes With Quzzier AI, generating quiz questions using AI models is effortless. Simply input a topic or term and submit. You have the option to use various models, including GPT-4, GPT-3.5-Turbo, or even your own trained models / knowledge bases. Additionally, you can adjust the answers using optional parameters, such as creativity, logic, and size.
Generate Quizzes After the questions have been successfully generated by the AI and processed by Quizzer Ai, they can be reviewed in more detail.</description>
    </item>
    
    <item>
      <title>Features</title>
      <link>https://htw-imi-showtime.github.io/staging/ss23/master/m6-vamx/features/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://htw-imi-showtime.github.io/staging/ss23/master/m6-vamx/features/</guid>
      <description>Features VamX Vamx is a editor tool that allows multiple sounds instances to be grouped and controlled by a single component.
The Editor component allows the user to import a sound file and manipulate various sound properties using different evaluation methods, such as custom graphs for complex sound manipulation. The various sound properties and their evaluation settings can be saved as presets and reused in other sound files.
The Editor allows importing regular audio files via the Unity-Editor</description>
    </item>
    
    <item>
      <title>Future</title>
      <link>https://htw-imi-showtime.github.io/staging/ss23/master/m2-mentist/future/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://htw-imi-showtime.github.io/staging/ss23/master/m2-mentist/future/</guid>
      <description>Future Improved and high-quality chatbot Through advancements in data science and machine learning, the chatbot&amp;rsquo;s ability to analyze and provide personalized support will be greatly improved. The chatbot will be equipped to offer tailored recommendations and coping strategies based on individual user patterns, fostering a deeper understanding of each user&amp;rsquo;s unique needs.
Personalized needs with various trackers Different trackers will be developed for users to set them individually according to their own preferences.</description>
    </item>
    
    <item>
      <title>Process</title>
      <link>https://htw-imi-showtime.github.io/staging/ss23/bachelor/b2-i-cant-c-sharp/process/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://htw-imi-showtime.github.io/staging/ss23/bachelor/b2-i-cant-c-sharp/process/</guid>
      <description>Process To start with, we first had to define what a mini-game looks like. As we were able to determine, it was not so easy to commit to the necessary functions. We decided to look at the mini-games as a whole and to view our mini-games as individual tasks of a gaming experience.
By implementing simple functions such as pressing a button or moving the control stick in one direction, every gamer&amp;rsquo;s heart is addressed.</description>
    </item>
    
    <item>
      <title>Process</title>
      <link>https://htw-imi-showtime.github.io/staging/ss23/bachelor/b3-shop-gpt/process/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://htw-imi-showtime.github.io/staging/ss23/bachelor/b3-shop-gpt/process/</guid>
      <description>Process We started the project with a brainstorming phase to come up with realistic use cases, which can be done in the given time and with regard of our skills. There were multiple different ideas like a chat assistant and including the OpenAI speech recognition Whisper. Finally we decided on 3 use cases to explore: curated shopping list, product comparison and a product summary.
The first week was focused on onboarding, reading OpenAI documentation and prompt engineering to test feasibility of our selected use cases.</description>
    </item>
    
    <item>
      <title>Process</title>
      <link>https://htw-imi-showtime.github.io/staging/ss23/bachelor/b4-visual-agenda/process/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://htw-imi-showtime.github.io/staging/ss23/bachelor/b4-visual-agenda/process/</guid>
      <description>Process Our journey began with a crucial kickoff meeting, where we discussed the project&amp;rsquo;s milestones and set the schedules for their completion. During this meeting, the team collaborated to find suitable meeting days and times that would accommodate everyone&amp;rsquo;s busy schedules. In our subsequent meetings, we focused on comprehensive progress updates. We discussed the tasks we had been diligently working on and candidly addressed any challenges we encountered along the way.</description>
    </item>
    
    <item>
      <title>Process</title>
      <link>https://htw-imi-showtime.github.io/staging/ss23/bachelor/b5-spellweaver/process/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://htw-imi-showtime.github.io/staging/ss23/bachelor/b5-spellweaver/process/</guid>
      <description>Process API&amp;rsquo;s - Research and Testing Since the core task of our project was to investigate STT in VR, we invested a lot of time in selecting API&amp;rsquo;s. All good things come in threes, and thus also the number of our selected apis. However, the road to the three finalists was not so short, as there is a wide range of APIs and we also had to run several tests, understand the logic and also ensure their functionality on Unity.</description>
    </item>
    
    <item>
      <title>Process</title>
      <link>https://htw-imi-showtime.github.io/staging/ss23/bachelor/b6-security-audit-bot/process/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://htw-imi-showtime.github.io/staging/ss23/bachelor/b6-security-audit-bot/process/</guid>
      <description>Organization The project management was mainly done via GitLab, with the GitLab server provided by our project supervisors David Koschnick and Christoph Bork. We followed agile methods and focused primarily on scrum-like project management. However, due to the small team size, we made some deviations from a pure scrum approach.
At the beginning of the project we brought together our individual skills and interests and developed a shared vision for the product.</description>
    </item>
    
    <item>
      <title>Process</title>
      <link>https://htw-imi-showtime.github.io/staging/ss23/master/m2-mentist/process/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://htw-imi-showtime.github.io/staging/ss23/master/m2-mentist/process/</guid>
      <description>Process Research The research process was crucial for the project due to its focus on the sensitive topic of mental illnesses. Extensive research was required for mental illnesses in general, looking into various psychological models and medical literature to make important decisions about choosing appropriate features for a fitting target group. Therefore a thorough examination of the targeted users were also overly crucial including a careful analysis of the mental illness - depression.</description>
    </item>
    
    <item>
      <title>Process</title>
      <link>https://htw-imi-showtime.github.io/staging/ss23/master/m5-quizzer-ai/process/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://htw-imi-showtime.github.io/staging/ss23/master/m5-quizzer-ai/process/</guid>
      <description>üìã Process In our project, we managed the process using a Trello board, a helpful tool for organizing tasks and responsibilities. The Kanban board allowed us to efficiently distribute tasks among the team members and track the progress of each assignment. This method facilitated clear communication and coordination throughout the project, ensuring that everyone knew their roles and deadlines. We also held meeting sessions every Monday via Microsoft Teams. This helped us stay on track, kept us in discussion, and we were able to plan ahead for the current week.</description>
    </item>
    
    <item>
      <title>Tech Stack</title>
      <link>https://htw-imi-showtime.github.io/staging/ss23/bachelor/b2-i-cant-c-sharp/techstack/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://htw-imi-showtime.github.io/staging/ss23/bachelor/b2-i-cant-c-sharp/techstack/</guid>
      <description>Tech Stack Future In the future, we have some exciting plans in store! Our commitment to continuous improvement and innovation drives us to explore new horizons and bring you a gaming experience like no other.
More Games: The more the better! A various collection enhances the overall experience. Multiplayer Support: Where you can engage in thrilling gameplay with and against other players. Mechanic Modifiers: For the motivated who are not fully occupied, there are some special events that make your gameplay spicy (e.</description>
    </item>
    
    <item>
      <title>Tech Stack</title>
      <link>https://htw-imi-showtime.github.io/staging/ss23/bachelor/b3-shop-gpt/techstack/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://htw-imi-showtime.github.io/staging/ss23/bachelor/b3-shop-gpt/techstack/</guid>
      <description> Tech stack Our tech stack consists of the following technologies:
Javascript Chrome Extension React NPM Webpack OpenAI API idealo Open Search API Jest </description>
    </item>
    
    <item>
      <title>Tech Stack</title>
      <link>https://htw-imi-showtime.github.io/staging/ss23/bachelor/b4-visual-agenda/techstack/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://htw-imi-showtime.github.io/staging/ss23/bachelor/b4-visual-agenda/techstack/</guid>
      <description>Tech Stack Communication
For the purpose of communicating with each other we used
Zoom Teams and WhatsApp. Creative Parts
Drafting our ideas and creating anything related to the design we used
Figma Penpot Frontend
Our Frontend was made with
Ionic React Capacitor Backend
Our backend was crafted using
Node.js Socket.io Future Looking ahead, we envision several exciting ideas to enhance Visual Agenda, maximizing its potential and revolutionizing the meeting experience:</description>
    </item>
    
    <item>
      <title>Tech Stack</title>
      <link>https://htw-imi-showtime.github.io/staging/ss23/bachelor/b5-spellweaver/techstack/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://htw-imi-showtime.github.io/staging/ss23/bachelor/b5-spellweaver/techstack/</guid>
      <description>Organisation and Communication For a good communication as well as organization within the group, we used the following services Discord for our two weekly online meetings WhatsApp to keep up to date all the time Google Drive to store our shared documents within the group and with our supervisors Mattermost for the communication with the research group GitLab for organizing the Unity project Miro for visualizing the process and collect inspirations for our game Discord WhatsApp Mattermost Google Drive GitLab Miro Development To create a game in virtual reality, we needed some software to develop it and to run it on device Rider,VS Code,VS these three were our favourite IDE&amp;rsquo;s for C# develepment in Unity Unity was our main tool to work with the XR components, create the scenes, game objects, and to bring our game more and more to life Oculus is necessary to set up our VR-Glasses Sidequest is like a second app store we needed to start the game on device Rider Visual Studio Code Visual Studio Unity Oculus Sidequest Image Sources https://de.</description>
    </item>
    
    <item>
      <title>Tech Stack</title>
      <link>https://htw-imi-showtime.github.io/staging/ss23/bachelor/b6-security-audit-bot/techstack/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://htw-imi-showtime.github.io/staging/ss23/bachelor/b6-security-audit-bot/techstack/</guid>
      <description>Project Management The project management was mainly done via GitLab. Our GitLab server was provided by our project supervisors David Koschnick and Christoph Bork. Under their guidance, we focused on agile methods and mainly followed a scrum-like approach.
For our weekly sprints, we used the issue (ticket) board and milestones (epics). This allowed us to approach our tasks in a structured way and track the increment progress in the project well.</description>
    </item>
    
    <item>
      <title>Tech Stack</title>
      <link>https://htw-imi-showtime.github.io/staging/ss23/master/m2-mentist/techstack/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://htw-imi-showtime.github.io/staging/ss23/master/m2-mentist/techstack/</guid>
      <description> Basic Gitlab Discord Zoom Frontend Vue Nuxt3 TailwindCSS Vuetify Backend Django DjangoREST Rasa Open Source </description>
    </item>
    
    <item>
      <title>Tech Stack</title>
      <link>https://htw-imi-showtime.github.io/staging/ss23/master/m5-quizzer-ai/techstack/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://htw-imi-showtime.github.io/staging/ss23/master/m5-quizzer-ai/techstack/</guid>
      <description>üíª Development The project was built upon an existing prototype, reducing the need for starting from scratch. Flutter, a Google-developed open-source framework for cross-platform app development, was chosen for the UI. It utilizes Dart, a programming language tightly integrated with Flutter. The Isar database is a robust Flutter package that seamlessly integrates databases. It offers fast performance, supports various data types, and facilitates efficient data filtering. Additionally, it optimizes offline usage and benefits from a strong community support, making it a reliable data management solution for Flutter applications.</description>
    </item>
    
    <item>
      <title>Tech Stack</title>
      <link>https://htw-imi-showtime.github.io/staging/ss23/master/m6-vamx/techstack/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://htw-imi-showtime.github.io/staging/ss23/master/m6-vamx/techstack/</guid>
      <description>Tech Stack Within the Unity game engine, we developed the sound framework and built the VR test environment. It provided us with many build-in features for programming with sounds and was well suited for development with VR. The XR Interaction Toolkit offered us all the basic functions for interaction in VR. With the help of input events and haptic feedback, we were able to make the minigames more interesting and created a good gaming experience.</description>
    </item>
    
    <item>
      <title>The Team</title>
      <link>https://htw-imi-showtime.github.io/staging/ss23/bachelor/b2-i-cant-c-sharp/team/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://htw-imi-showtime.github.io/staging/ss23/bachelor/b2-i-cant-c-sharp/team/</guid>
      <description> The team We are a striving group of IMI students, gathered together for the IMI Showtime project to create a wonderful experience for everyone joining our fair booth. Many of us are very creative minds, artistically versatile yet specialists in their respective fields and (semi-)experienced, good game designers. Hence we decided to do the game related project. The Voice (Sound) The Unreal (Dev) The Bughunter (QA) The Changeling (Support) The Doodleista (Art) The Unity (Backend/-drop) The Streamer (Design) </description>
    </item>
    
    <item>
      <title>Download</title>
      <link>https://htw-imi-showtime.github.io/staging/ss23/master/m6-vamx/process/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://htw-imi-showtime.github.io/staging/ss23/master/m6-vamx/process/</guid>
      <description> Download You can download VamX and the games here. </description>
    </item>
    
    <item>
      <title>Features</title>
      <link>https://htw-imi-showtime.github.io/staging/ss23/master/m4-shop-gpt/features/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://htw-imi-showtime.github.io/staging/ss23/master/m4-shop-gpt/features/</guid>
      <description>Product Search And Filter The AI-powered product search and filter feature is the core functionality of shopGPT, designed to help users find and buy products through idealo.de. The user can specify preferences such as price range, brand, or other relevant criteria to narrow down the list of products displayed.
Product Filter Suggestion Tags Based on your message history, ShopGPT creates tailored and easy-to-understand questions, designed to help you make the most out of your AI shopping assistant.</description>
    </item>
    
    <item>
      <title>Process</title>
      <link>https://htw-imi-showtime.github.io/staging/ss23/master/m3-intu/process/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://htw-imi-showtime.github.io/staging/ss23/master/m3-intu/process/</guid>
      <description>Requirement analysis During the initial phase of our project, we engaged in extensive brainstorming sessions to determine what features our learning application should provide. We came up with more than 70 ideas and requirements that we considered interesting and worthy to explore. During this phase, we gave special attention to identifying strengths and weaknesses of current learning platforms, and emphasized on finding potential new and innovative approaches. Following the brainstorming phase, we conducted several iterations of prioritization which helped us narrow down our focus.</description>
    </item>
    
    <item>
      <title>Process</title>
      <link>https://htw-imi-showtime.github.io/staging/ss23/master/m4-shop-gpt/process/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://htw-imi-showtime.github.io/staging/ss23/master/m4-shop-gpt/process/</guid>
      <description>Research Choosing Machine Learning (ML) models. We explored different options for ML models that could power the chatbot. Some of the options considered were GPT-3 from OpenAI, Alpaca from Stanford University, and Llama from Meta. We assessed their features, capabilities, and compatibility with our requirements to make an informed decision.
Getting to know LangChain. LangChain is a framework specifically designed to simplify the creation of applications utilizing large language models.</description>
    </item>
    
    <item>
      <title>Challenges</title>
      <link>https://htw-imi-showtime.github.io/staging/ss23/master/m4-shop-gpt/challenges/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://htw-imi-showtime.github.io/staging/ss23/master/m4-shop-gpt/challenges/</guid>
      <description>New AI Technologies Using cutting-edge AI technologies presented us with significant challenges. It required considerable time and effort to thoroughly research Prompt Engineering, GPT models, LangChain framework and grasp these concepts, ensuring a solid understanding for effective integration into our project. Keeping Up with Rapid Technology Changes As technology rapidly evolves, we encountered challenges in staying up-to-date with frequent updates in LangChain versions, OpenAI function calls, GPT models, and Vector Database.</description>
    </item>
    
    <item>
      <title>Tech Stack</title>
      <link>https://htw-imi-showtime.github.io/staging/ss23/master/m3-intu/techstack/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://htw-imi-showtime.github.io/staging/ss23/master/m3-intu/techstack/</guid>
      <description>Concept &amp;amp; Design Miro
Miro was used for the initial brainstorming session, for concretizing the requirements and concept, and for the wireframes. It allowed the team to discuss and visualize ideas and record decisions.
Figma
Figma was used to create the UI component library, styleguide and final design of the user interface of intu.
Development React
React is a progressive JavaScript framework, leveraging its capabilities to build interactive user interfaces.</description>
    </item>
    
    <item>
      <title>Tech Stack</title>
      <link>https://htw-imi-showtime.github.io/staging/ss23/master/m4-shop-gpt/techstack/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://htw-imi-showtime.github.io/staging/ss23/master/m4-shop-gpt/techstack/</guid>
      <description>Concept &amp;amp; Design Figma Used for creating and visualizing design concepts, and UI/UX elements. Canva Utilized for designing graphics, logos for the chatbot. Miro Used as a visual collaboration tool, allowing for the sharing of ideas, documents, and links, fostering a collaborative and productive environment. App Development NextJS Chosen as the web framework for building the application, providing server-side rendering, efficient routing, and an enhanced developer experience. React Used for frontend development, React enables the creation of interactive and reusable UI components, while TypeScript enhances code reliability and scalability.</description>
    </item>
    
    <item>
      <title>Future</title>
      <link>https://htw-imi-showtime.github.io/staging/ss23/bachelor/b6-security-audit-bot/future/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://htw-imi-showtime.github.io/staging/ss23/bachelor/b6-security-audit-bot/future/</guid>
      <description>Future For the future, we plan to make the SecurityAuditBot even more powerful by enabling the connection of all relevant databases. This will allow the bot to access a broader database and perform more comprehensive checks on existing entries in the databases.
Furthermore, we will continuously implement more services to extend the SecurityAuditBot‚Äôs functionality and cover more security aspects. This includes implementing a configuration check for services, e.g. to identify and point out default passwords.</description>
    </item>
    
    <item>
      <title>Future</title>
      <link>https://htw-imi-showtime.github.io/staging/ss23/master/m4-shop-gpt/future/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://htw-imi-showtime.github.io/staging/ss23/master/m4-shop-gpt/future/</guid>
      <description>Uploading Multiple Images It is intended that ShopGPT will support the ability to upload multiple images in the future. This will enable users to provide more detailed visual information about the products they are seeking, allowing for even more accurate and tailored recommendations. Combination of Text and Image Input Currently, the user can either text or upload an image. We want to work towards seamlessly integrating both text and image input simultaneously within ShopGPT.</description>
    </item>
    
    <item>
      <title>Team</title>
      <link>https://htw-imi-showtime.github.io/staging/ss23/bachelor/b6-security-audit-bot/team/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://htw-imi-showtime.github.io/staging/ss23/bachelor/b6-security-audit-bot/team/</guid>
      <description> The team We are a young team of three people who worked on the whole creation of the project: Kjell Liebher Minh Vo Mirijam Trippel </description>
    </item>
    
    <item>
      <title>Contact</title>
      <link>https://htw-imi-showtime.github.io/staging/contact/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://htw-imi-showtime.github.io/staging/contact/</guid>
      <description>The IMIxShowtime is a showcase of the term-long practical projects in the International Media and Computing Bachelor&amp;rsquo;s and Master&amp;rsquo;s programs. It takes place every term on the Friday of the last week of lectures.</description>
    </item>
    
    <item>
      <title>Future</title>
      <link>https://htw-imi-showtime.github.io/staging/ss23/master/m5-quizzer-ai/future/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://htw-imi-showtime.github.io/staging/ss23/master/m5-quizzer-ai/future/</guid>
      <description>üßä bloc integration We&amp;rsquo;re planning to expand our Flutter application by integrating Bloc for state management. Bloc is a state management design pattern and architecture used in Flutter to handle the flow of data and manage the state of an application. It is specifically designed to simplify and structure the way an app&amp;rsquo;s state is handled and updated. One of the main advantages of using Bloc for state management is that it helps to maintain a clear separation of concerns.</description>
    </item>
    
    <item>
      <title>IMI-Showtime via Zoom</title>
      <link>https://htw-imi-showtime.github.io/staging/zoom-help/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://htw-imi-showtime.github.io/staging/zoom-help/</guid>
      <description>1. Install or update Zoom If you do not have the Zoom client installed yet, you can get it here:
Windows | Other platforms
If you already have the client installed, please make sure it is up to date. 2. Join the Zoom session Simply follow this link: https://htw-berlin.zoom.us/j/97320821203
3. Switching rooms To switch from the main session into breakout rooms you first need to click on the ‚ÄûBreakout Rooms‚Äú button (1) and then click ‚ÄûJoin‚Äú for the desired room (2) and confirm with ‚ÄûYes‚Äú (3).</description>
    </item>
    
    <item>
      <title>Important Dates</title>
      <link>https://htw-imi-showtime.github.io/staging/dates/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://htw-imi-showtime.github.io/staging/dates/</guid>
      <description>After Showtime is just before the next Showtime - upcoming events:</description>
    </item>
    
    <item>
      <title>Imprint</title>
      <link>https://htw-imi-showtime.github.io/staging/imprint/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://htw-imi-showtime.github.io/staging/imprint/</guid>
      <description>Diese Seite pr√§sentiert Praxisprojekte der Studieng√§nge Internationale Medieninformatik Bachelor und Internationale Medieninformatik Master der HTW Berlin und erg√§nzt diese Webseiten.
Redaktionelle Verantwortung und verantwortliche Ansprechperson Studiengangssprecher der Studieng√§nge Internationale Medieninformatik
Prof. Dr. Gefei Zhang
HTW Berlin, Fachbereich 4
Wilhelminenhofstr. 75A
12495 Berlin
gefei.zhang@htw-berlin.de
https://www.htw-berlin.de/impressum/
Telefon: +49 30 5019 - 3738
Urheberschutz und Nutzung Die Urheber r√§umen Ihnen ganz konkret das Nutzungsrecht ein, sich eine private Kopie f√ºr pers√∂nliche Zwecke anzufertigen. Nicht berechtigt sind Sie dagegen, die Materialien zu ver√§ndern und/oder weiter zu geben oder gar selbst zu ver√∂ffentlichen.</description>
    </item>
    
    <item>
      <title>Privacy Policy</title>
      <link>https://htw-imi-showtime.github.io/staging/privacy-policy/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://htw-imi-showtime.github.io/staging/privacy-policy/</guid>
      <description>Es gilt die Datenschutzerkl√§rung der HTW Berlin.
Diese Website verwendet keine Cookies und speichert keine Informationen, die √ºber die √ºblichen Server-Logs der Webserver unter https://htw-berlin.de/ und https://github.com/ f√ºr https://htw-imi-showtime.github.io/preview/ und https://htw-imi-showtime.github.io/staging/ hinausgehen.</description>
    </item>
    
    <item>
      <title>Project Archive Overview</title>
      <link>https://htw-imi-showtime.github.io/staging/archive/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://htw-imi-showtime.github.io/staging/archive/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Projects</title>
      <link>https://htw-imi-showtime.github.io/staging/projects/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://htw-imi-showtime.github.io/staging/projects/</guid>
      <description>This term there are 5 bachelor&amp;rsquo;s and 5 master&amp;rsquo;s projects. To get an idea of the scope and characteristics of our projects, you may also want to visit the archive.</description>
    </item>
    
    <item>
      <title>Schedule</title>
      <link>https://htw-imi-showtime.github.io/staging/schedule/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://htw-imi-showtime.github.io/staging/schedule/</guid>
      <description>There will be brief project presentations with a quick Q&amp;amp;A in the morning (very brief presentations, the odd times are real, we might even be a bit quicker than this) and a project fair in the afternoon.</description>
    </item>
    
  </channel>
</rss>
